@model IEnumerable<SAS.Domain.Entities.Security.ControllerInfo>
@{
    ViewData["Title"] = "Create";
}
@*<secure-content asp-area="" asp-controller="Security" asp-action="CreateMenus">*@
    <script>
        var controllerName = [];
    </script>

    <div>
        <div id="fdout" class="alert alert-success" style="display:none">
            <i class="fas fa-check"></i><strong id="errorText"> </strong>
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-light">
            <div class="row">
                <div class="col-12">
                    <div class="float-left">
                        <h3><i class="fas fa-bars"></i> Add Menu </h3>
                    </div>
                    <div class="float-right">
                        <a class="btn btn-primary btn-raised" onclick="updateRole()" role="button" id="indexcreatebtn">Save</a>
                        <a asp-action="Menu" class="btn btn-danger btn-raised" role="button" id="indexcreatebtn">Back to list</a>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @if (Model.Count() == 0)
    {
        <div>
            No record found
        </div>
    }


    @foreach (var item in Model)
    {
        <script>
         controllerName.push('@item.Name');
        </script>
        <div class="card">
            <div id="Panel_@item.Name" class="panel panel-default" style="margin-bottom: 10px;">               
                <a data-toggle="collapse" data-parent="#accordion" href="#Controller_@item.Name">
                    <h4 class="card-header">
                        @Html.DisplayFor(modelItem => item.DisplayName)<span class="glyphicon glyphicon-plus pull-right"></span>
                    </h4>
                </a>
               
                <div id="Controller_@item.Name" class="panel-collapse collapse">
                    <div class="card-body">

                        <table class="table">
                            <thead>
                                <tr>
                                    <th>
                                        Action Name
                                    </th>
                                    <th>
                                        Action Display Name
                                    </th>
                                    <th>
                                        <div class="checkbox">
                                            <label for="SelectAll_@item.Name"><input onchange="updateAllCheckBox(this,'@item.Name')" id="SelectAll_@item.Name" name="SelectAll_@item.Name" type="checkbox" value="" />Check All </label>                                          
                                        </div>
                                    </th>

                                </tr>
                            </thead>

                            <tbody id="ActionLists_@item.Name">
                                @foreach (var action in item.Actions)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => action.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => action.DisplayName)
                                        </td>
                                        <td>
                                            <div class="checkbox">
                                                <label> <input name="@action.Name" type="checkbox" actionId="@action.ActionId" value="@action.Name" /></label>
                                            </div>
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>

                    </div>
                </div>
            </div>

        </div>
    }

    <script>
        $(document).ready(function () {
            // Add minus icon for collapse element which is open by default
            $(".collapse.in").each(function () {
                $(this).siblings(".panel-heading").find(".glyphicon").addClass("glyphicon-minus").removeClass("glyphicon-plus");
            });

            // Toggle plus minus icon on show hide of collapse element
            $(".collapse").on('show.bs.collapse', function () {
                $(this).parent().find(".glyphicon").removeClass("glyphicon-plus").addClass("glyphicon-minus");
            }).on('hide.bs.collapse', function () {
                $(this).parent().find(".glyphicon").removeClass("glyphicon-minus").addClass("glyphicon-plus");
            });
        });

        function updateAllCheckBox(ths, controllerName) {
            if (ths.checked) {
                var selectedControllerId = "ActionLists_" + controllerName;
                $('#' + selectedControllerId).find(':checkbox').each(function () {
                    this.checked = true;
                });
            }
            else {
                var selectedControllerId = "ActionLists_" + controllerName;
                $('#' + selectedControllerId).find(':checkbox').each(function () {
                    this.checked = false;
                });
            }

        }

        function updateRole() {
            var menuItems = [];
            $(controllerName).each(function (index, value) {
                var actionList = [];
                $('#ActionLists_' + value).find(':checkbox').each(function () {
                    if (this.checked) {
                        var actionName = $(this).attr('name');
                        var actionId = $(this).attr('actionId');
                        var o = { actionName: actionName, actionId: actionId };
                        actionList.push(o);
                    }

                });
                console.log(actionList);
                var o = {
                    controllerName: value,
                    actionList: actionList
                }
                if (actionList.length != 0)
                    menuItems.push({ controllerName: value, actionList: actionList });
            });
            //var menuToRole = {
            //    menuItems: menuItems,
            //    roleId: selectedRole
            //};
            var data = JSON.stringify(menuItems);
            $.ajax({
                type: "POST",
                url: '@Url.Action("CreateMenus", "Security")',
                dataType: 'text',
                data: "menuItem=" + data,
                success: function (response) {
                    if (response == "True") {
                        //$('#errorText').text("Saved successfully");
                        //$('#fdout').show();
                        Swal.fire(
                            'Good job!',
                            'Menu created successfully!',
                            'success'
                        )

                        setTimeout(function () {
                            $('#fdout').hide();
                            window.location.href = '@Url.Action("Menu", "Security")';
                        }, 2000);
                    }
                    else {
                        Swal.fire({
                            type: 'error',
                            title: 'Oops...',
                            text: 'Please select atleast one menu item!'
                           
                        })
                    }

                }
            });
        }
    </script>
@*</secure-content>*@